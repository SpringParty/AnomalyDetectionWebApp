{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","state","response","post","responseToPost","callapi","a","fetch","json","body","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","this","then","res","express","catch","err","console","log","className","src","logo","alt","href","target","rel","onSubmit","type","value","onChange","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8QAAe,MAA0B,iC,eC0E1BA,E,4MArEXC,MAAQ,CACJC,SAAU,GACVC,KAAM,GACNC,eAAgB,I,EASpBC,Q,sBAAU,8BAAAC,EAAA,sEACiBC,MAAM,eADvB,cACAL,EADA,gBAEaA,EAASM,OAFtB,UAEAC,EAFA,OAGkB,MAApBP,EAASQ,OAHP,sBAG6BC,MAAMF,EAAKG,SAHxC,gCAKCH,GALD,2C,EAQVI,a,uCAAe,WAAMC,GAAN,iBAAAR,EAAA,6DACXQ,EAAEC,iBADS,SAEYR,MAAM,aAAc,CACvCS,OAAQ,SACRC,QAAS,CACL,eAAgB,oBAEpBR,KAAMS,KAAKC,UAAU,CAAEhB,KAAM,EAAKF,MAAME,SAPjC,cAELD,EAFK,gBASQA,EAASkB,OATjB,OASLX,EATK,OAWX,EAAKY,SAAS,CAAEjB,eAAgBK,IAXrB,2C,6GAdf,WAAqB,IAAD,OAChBa,KAAKjB,UACAkB,MAAK,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEnB,SAAUsB,EAAIC,aAC1CC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBAyBlC,WAAU,IAAD,OACL,OACI,sBAAKG,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACS,8CADT,0BAGA,mBACIH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJR,4BASJ,4BAAId,KAAKrB,MAAMC,WACf,uBAAMmC,SAAUf,KAAKT,aAArB,UACI,4BACI,uDAEJ,uBACIyB,KAAK,OACLC,MAAOjB,KAAKrB,MAAME,KAClBqC,SAAU,SAAA1B,GAAC,OAAI,EAAKO,SAAS,CAAElB,KAAMW,EAAEqB,OAAOI,WAElD,wBAAQD,KAAK,SAAb,uBAEJ,4BAAIhB,KAAKrB,MAAMG,wB,GAhEbqC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.94834753.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        response: '',\r\n        post: '',\r\n        responseToPost: '',\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.callapi()\r\n            .then(res => this.setState({ response: res.express }))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    callapi = async () => {\r\n        const response = await fetch('/api/models');\r\n        const body = await response.json();\r\n        if (response.status !== 200) throw Error(body.message);\r\n\r\n        return body;\r\n    };\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const response = await fetch('/api/model', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ post: this.state.post }),\r\n        });\r\n        const body = await response.text();\r\n\r\n        this.setState({ responseToPost: body });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p>\r\n                        Edit <code>src/App.js</code> and save to reload.\r\n                    </p>\r\n                    <a\r\n                        className=\"App-link\"\r\n                        href=\"https://reactjs.org\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        Learn React\r\n                    </a>\r\n                </header>\r\n                <p>{this.state.response}</p>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>\r\n                        <strong>Post to Server:</strong>\r\n                    </p>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.post}\r\n                        onChange={e => this.setState({ post: e.target.value })}\r\n                    />\r\n                    <button type=\"submit\">Submit</button>                    \r\n                </form>\r\n                <p>{this.state.responseToPost}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}